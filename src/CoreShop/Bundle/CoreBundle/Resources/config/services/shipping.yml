services:
    _defaults:
        public: true

    CoreShop\Component\Core\Shipping\Rule\Condition\CategoriesConditionChecker:
        arguments:
            - '@coreshop.repository.category'
        tags:
            - { name: coreshop.shipping_rule.condition, type: categories, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Rule\Condition\CategoriesConfigurationType }

    CoreShop\Component\Core\Shipping\Rule\Condition\ProductsConditionChecker:
        arguments:
            - '@coreshop.repository.product'
        tags:
            - { name: coreshop.shipping_rule.condition, type: products, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Rule\Condition\ProductsConfigurationType }

    CoreShop\Component\Core\Shipping\Rule\Condition\CountriesConditionChecker:
        tags:
            - { name: coreshop.shipping_rule.condition, type: countries, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Rule\Condition\CountriesConfigurationType }

    CoreShop\Component\Core\Shipping\Rule\Condition\ZonesConditionChecker:
        tags:
            - { name: coreshop.shipping_rule.condition, type: zones, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Rule\Condition\ZonesConfigurationType }

    CoreShop\Component\Core\Shipping\Rule\Condition\CustomersConditionChecker:
        tags:
            - { name: coreshop.shipping_rule.condition, type: customers, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Rule\Condition\CustomersConfigurationType }

    CoreShop\Component\Core\Shipping\Rule\Condition\CustomerGroupsConditionChecker:
        tags:
            - { name: coreshop.shipping_rule.condition, type: customerGroups, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Rule\Condition\CustomerGroupsConfigurationType }

    CoreShop\Component\Core\Shipping\Rule\Condition\StoresConditionChecker:
        tags:
            - { name: coreshop.shipping_rule.condition, type: stores, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Rule\Condition\StoresConfigurationType }

    CoreShop\Component\Core\Shipping\Rule\Condition\CurrenciesConditionChecker:
        tags:
            - { name: coreshop.shipping_rule.condition, type: currencies, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Rule\Condition\CurrenciesConfigurationType }

    CoreShop\Component\Core\Shipping\Rule\Action\PriceActionProcessor:
        arguments:
            - '@coreshop.repository.currency'
            - '@CoreShop\Component\Currency\Converter\CurrencyConverterInterface'
        tags:
            - { name: coreshop.shipping_rule.action, type: price, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Shipping\Rule\Action\PriceActionConfigurationType }

    CoreShop\Component\Core\Shipping\Rule\Action\AdditionAmountActionProcessor:
        arguments:
            - '@coreshop.repository.currency'
            - '@CoreShop\Component\Currency\Converter\CurrencyConverterInterface'
        tags:
            - { name: coreshop.shipping_rule.action, type: additionAmount, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Shipping\Rule\Action\AdditionAmountActionConfigurationType }

    CoreShop\Component\Core\Shipping\Rule\Action\DiscountAmountActionProcessor:
        arguments:
            - '@coreshop.repository.currency'
            - '@CoreShop\Component\Currency\Converter\CurrencyConverterInterface'
        tags:
            - { name: coreshop.shipping_rule.action, type: discountAmount, form-type: CoreShop\Bundle\CoreBundle\Form\Type\Shipping\Rule\Action\DiscountAmountActionConfigurationType }

    CoreShop\Component\Shipping\Calculator\TaxedShippingCalculatorInterface: '@CoreShop\Component\Core\Shipping\Calculator\TaxedCarrierPriceRuleCalculator'
    CoreShop\Component\Core\Shipping\Calculator\TaxedCarrierPriceRuleCalculator:
        arguments:
            - '@CoreShop\Component\Shipping\Calculator\CarrierPriceCalculatorInterface'
            - '@coreshop.registry.shipping.tax_calculation_strategies'

    CoreShop\Component\Core\Shipping\Discover\StoreBasedShippableCarriersDiscovery:
        decorates: CoreShop\Component\Shipping\Resolver\CarriersResolverInterface
        arguments:
            - '@CoreShop\Component\Core\Shipping\Discover\StoreBasedShippableCarriersDiscovery.inner'
            - '@coreshop.repository.carrier'
            - '@coreshop.shipping.carrier.validator'

    CoreShop\Component\Core\Shipping\Resolver\CheapestDefaultCarrierResolver:
        arguments:
            - '@CoreShop\Component\Shipping\Resolver\CarriersResolverInterface'
            - '@CoreShop\Component\Shipping\Calculator\CarrierPriceCalculatorInterface'
            - '@CoreShop\Component\Order\Cart\CartContextResolverInterface'
