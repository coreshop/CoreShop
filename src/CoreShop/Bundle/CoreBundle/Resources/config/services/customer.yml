parameters:
    coreshop.customer_address.folder_path: addresses

services:
    _defaults:
        public: true

    coreshop.customer.registration_service: '@CoreShop\Bundle\CoreBundle\Customer\RegistrationServiceInterface'
    CoreShop\Bundle\CoreBundle\Customer\RegistrationServiceInterface: '@CoreShop\Bundle\CoreBundle\Customer\RegistrationService'
    CoreShop\Bundle\CoreBundle\Customer\RegistrationService:
        arguments:
            - '@coreshop.repository.customer'
            - '@coreshop.object_service'
            - '@event_dispatcher'
            - '@coreshop.context.locale'
            - '%coreshop.folder.customer%'
            - '%coreshop.folder.guest%'
            - '%coreshop.folder.address%'
            - '%coreshop.customer.security.login_identifier%'

    coreshop.customer.login_service: '@CoreShop\Bundle\CoreBundle\Customer\CustomerLoginService'
    CoreShop\Bundle\CoreBundle\Customer\CustomerLoginServiceInterface: '@CoreShop\Bundle\CoreBundle\Customer\CustomerLoginService'
    CoreShop\Bundle\CoreBundle\Customer\CustomerLoginService:
        arguments:
            - '@security.token_storage'

    CoreShop\Bundle\CoreBundle\EventListener\CustomerNewsletterConfirmListener:
        arguments:
            - '@coreshop.link_generator'
            - '@request_stack'
            - '@event_dispatcher'
        tags:
            - { name: kernel.event_listener, event: coreshop.customer.register, method: checkCustomerNewsletterConfirmation }
            - { name: kernel.event_listener, event: coreshop.customer.update_post, method: checkCustomerNewsletterConfirmation }

    CoreShop\Bundle\CoreBundle\EventListener\CustomerLoginListener:
        arguments:
            - '@coreshop.customer.login_service'
        tags:
            - { name: kernel.event_listener, event: coreshop.customer.register, method: onCustomerRegister }

    CoreShop\Bundle\CoreBundle\EventListener\CustomerCompanyRelationListener:
        arguments:
            - '@coreshop.repository.customer'
        tags:
            - { name: kernel.event_listener, event: pimcore.dataobject.preDelete, method: onCompanyDelete }

    CoreShop\Component\Core\Customer\Address\AddressAccessOptionsProvider: ~

    CoreShop\Component\Core\Customer\Allocator\CustomerAddressAllocatorInterface: '@CoreShop\Component\Core\Customer\Allocator\CustomerAddressAllocator'
    CoreShop\Component\Core\Customer\Allocator\CustomerAddressAllocator:
        public: false

    CoreShop\Component\Core\Customer\CustomerTransformHelperInterface: '@CoreShop\Component\Core\Customer\CustomerTransformHelper'
    CoreShop\Component\Core\Customer\CustomerTransformHelper:
        public: false
        arguments:
            - '@coreshop.factory.company'
            - '@CoreShop\Component\Pimcore\DataObject\ObjectServiceInterface'
            - '%coreshop.folder.company%'
            - '%coreshop.folder.address%'

    CoreShop\Component\Core\Customer\Address\AddressAssignmentManagerInterface: '@CoreShop\Component\Core\Customer\Address\AddressAssignmentManager'
    CoreShop\Component\Core\Customer\Address\AddressAssignmentManager:
        arguments:
            - '@CoreShop\Component\Core\Customer\CustomerTransformHelperInterface'

    CoreShop\Bundle\CoreBundle\Templating\Helper\AddressAllocatorHelperInterface: '@CoreShop\Bundle\CoreBundle\Templating\Helper\AddressAllocatorHelper'
    CoreShop\Bundle\CoreBundle\Templating\Helper\AddressAllocatorHelper:
        arguments:
            - '@CoreShop\Component\Core\Customer\Allocator\CustomerAddressAllocatorInterface'
        lazy: true
        tags:
            - { name: templating.helper, alias: coreshop_format_address }

    CoreShop\Bundle\CoreBundle\Twig\AddressAllocatorExtension:
        public: false
        arguments:
            - '@CoreShop\Bundle\CoreBundle\Templating\Helper\AddressAllocatorHelperInterface'
        tags:
            - { name: twig.extension }