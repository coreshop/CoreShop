services:
    _defaults:
        public: true

    CoreShop\Bundle\CoreBundle\EventListener\CartBlamerListener:
        arguments:
            - '@coreshop.cart_processor'
            - '@coreshop.context.cart'
            - '@coreshop.cart.manager'
        tags:
            - { name: kernel.event_listener, event: security.interactive_login, method: onInteractiveLogin }
            - { name: kernel.event_listener, event: coreshop.customer.register, method: onRegisterEvent }

    CoreShop\Bundle\CoreBundle\EventListener\PriceRuleUpdateEventListener:
        arguments: ['@coreshop.configuration.service']
        tags:
            - { name: kernel.event_listener, event: coreshop.cart_price_rule.post_save, method: storeConfigurationThatPriceRulesChanged }
            - { name: kernel.event_listener, event: coreshop.cart_price_rule.post_delete, method: storeConfigurationThatPriceRulesChanged }
            - { name: kernel.event_listener, event: coreshop.product_price_rule.post_save, method: storeConfigurationThatPriceRulesChanged }
            - { name: kernel.event_listener, event: coreshop.product_price_rule.post_delete, method: storeConfigurationThatPriceRulesChanged }

    CoreShop\Bundle\CoreBundle\EventListener\Order\OrderDocumentWkhtmlPrintOptionsListener:
        arguments:
            - '@coreshop.configuration.service'
        tags:
            - { name: kernel.event_listener, event: coreshop.order.shipment.wkhtml.options, method: resolveOptions }
            - { name: kernel.event_listener, event: coreshop.order.invoice.wkhtml.options, method: resolveOptions }

    CoreShop\Bundle\CoreBundle\EventListener\Order\OrderMailNoteEventListener:
        arguments:
            - '@coreshop.object_note_service'
        tags:
            - { name: kernel.event_listener, event: coreshop.mail.post_send, method: onOrderMailSent }

    CoreShop\Bundle\CoreBundle\EventListener\ProductUpdateEventListener:
        arguments:
            - '@coreshop.configuration.service'
        tags:
            - { name: kernel.event_listener, event: pimcore.dataobject.postUpdate, method: storeConfigurationThatProductChanged }

    CoreShop\Bundle\CoreBundle\EventListener\ProductAvailabilityEventListener:
        arguments:
            - '@coreshop.repository.cart_item'
            - '@Pimcore\Model\Factory'
        tags:
            - { name: kernel.event_listener, event: pimcore.dataobject.preUpdate, method: preUpdateListener }
            - { name: kernel.event_listener, event: pimcore.dataobject.postUpdate, method: postUpdateListener }
            - { name: kernel.event_listener, event: pimcore.dataobject.postDelete, method: postDeleteListener }

    CoreShop\Bundle\CoreBundle\EventListener\RequestCartRecalculation:
        arguments:
           - '@coreshop.cart.manager'
           - '@coreshop.context.shopper'
           - '@coreshop.configuration.service'
           - '@pimcore.http.request_helper'
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: checkPriceRuleState, priority: 0 }

    CoreShop\Bundle\CoreBundle\EventListener\RequestCartAvailability:
        arguments:
           - '@coreshop.cart.manager'
           - '@coreshop.context.shopper'
           - '@pimcore.http.request_helper'
           - '@session'
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: checkCartAvailability, priority: 7 }

    CoreShop\Bundle\CoreBundle\EventListener\CustomerOrderDeletionListener:
        arguments:
            - '@coreshop.repository.order'
        tags:
            - { name: kernel.event_listener, event: pimcore.dataobject.preDelete, method: checkCustomerOrdersBeforeDeletion }
            - { name: kernel.event_listener, event: pimcore.dataobject.deleteInfo, method: checkCustomerDeletionAllowed }

    CoreShop\Bundle\CoreBundle\EventListener\QuantityRangeUnitValidationListener:
        arguments:
            - '@coreshop.repository.product_unit_definition'
        tags:
            - { name: kernel.event_listener, event: coreshop.product_quantity_price_rules.data_validation, method: validate }

    CoreShop\Bundle\CoreBundle\EventListener\ProductStoreValuesAdminGetListener:
        tags:
            - { name: kernel.event_subscriber }
