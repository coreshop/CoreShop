imports:
    - { resource: "services/form.yml" }
    - { resource: "services/listeners.yml" }
    - { resource: "services/commands.yml" }

services:
    coreshop.factory.index.list:
        class: CoreShop\Bundle\IndexBundle\Factory\ListingFactory
        arguments:
            - '@coreshop.registry.index.worker'

    coreshop.filter.processor:
        class: CoreShop\Component\Index\Filter\FilterProcessor
        public: true
        arguments:
            - '@coreshop.registry.filter.condition_types'

    coreshop.factory.filter.list:
        class: CoreShop\Bundle\IndexBundle\Factory\FilteredListingFactory
        public: true
        arguments:
            - '@coreshop.factory.index.list'
            - '@coreshop.filter.processor'

    # Index Column Registry
    coreshop.registry.index.column_types:
        class: CoreShop\Component\Registry\ServiceRegistry
        arguments:
            - Symfony\Component\Form\FormTypeInterface
            - index-column-types

    coreshop.form_registry.index_column_types:
        class: CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry

    # Index Worker Registry
    coreshop.registry.index.worker:
        class: CoreShop\Component\Registry\ServiceRegistry
        arguments:
            - CoreShop\Component\Index\Worker\WorkerInterface
            - index-workers

    coreshop.form_registry.index.worker:
        class: CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry

    # Index Class Helper Registry
    coreshop.registry.index.extensions:
        class: CoreShop\Component\Registry\ServiceRegistry
        arguments:
            - CoreShop\Component\Index\Extension\IndexExtensionInterface
            - index-extensions

    # Filter Registry
    coreshop.registry.filter.condition_types:
        class: CoreShop\Component\Registry\ServiceRegistry
        arguments:
            - CoreShop\Component\Index\Filter\FilterConditionProcessorInterface
            - filter-processor

    coreshop.form_registry.filter.condition_types:
        class: CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry

    # Index Getter Registry
    coreshop.registry.index.getter:
        class: CoreShop\Component\Registry\ServiceRegistry
        arguments:
            - CoreShop\Component\Index\Getter\GetterInterface
            - index-getters

    coreshop.form_registry.index.getter:
        class: CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry

    # Interpreter Registry
    coreshop.registry.index.interpreter:
        class: CoreShop\Component\Registry\ServiceRegistry
        arguments:
            - CoreShop\Component\Index\Interpreter\InterpreterInterface
            - index-interpreters

    coreshop.form_registry.index.interpreter:
        class: CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry

    # Filter Group Helper
    coreshop.index.filter_group_helper:
        class: CoreShop\Component\Index\Worker\FilterGroupHelper
        arguments:
            - '@coreshop.registry.index.interpreter'

    # Index Workers
    coreshop.index.worker.mysql:
        class: CoreShop\Bundle\IndexBundle\Worker\MysqlWorker
        arguments:
            - '@coreshop.registry.index.extensions'
            - '@coreshop.registry.index.getter'
            - '@coreshop.registry.index.interpreter'
            - '@coreshop.index.filter_group_helper'
        shared: false
        calls:
            - { method: setLogger, arguments: ['@logger'] }
        tags:
            - { name: coreshop.index.worker, type: mysql, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Worker\MysqlWorkerType}

    # Index Getter
    coreshop.index.getter.brickfield:
        class: CoreShop\Component\Index\Getter\BrickGetter
        tags:
          - { name: coreshop.index.getter, type: brick, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Getter\BrickGetterFormType}

    coreshop.index.getter.classification_store:
        class: CoreShop\Component\Index\Getter\ClassificationStoreGetter
        tags:
          - { name: coreshop.index.getter, type: classificationstore, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Getter\ClassificationStoreGetterFormType}

    coreshop.index.getter.field_collection:
        class: CoreShop\Component\Index\Getter\FieldCollectionGetter
        tags:
          - { name: coreshop.index.getter, type: fieldcollection, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Getter\FieldCollectionGetterFormType}

    coreshop.index.getter.localized_field:
        class: CoreShop\Component\Index\Getter\LocalizedFieldGetter
        arguments:
            - '@coreshop.translation_locale_provider'
        tags:
            - { name: coreshop.index.getter, type: localizedfield, form-type: CoreShop\Bundle\IndexBundle\Form\Type\EmptyConfigurationFormType}

    # Index Interpreter
    coreshop.index.interpreter.soundex:
        class: CoreShop\Component\Index\Interpreter\SoundexInterpreter
        tags:
          - { name: coreshop.index.interpreter, type: soundex, form-type: CoreShop\Bundle\IndexBundle\Form\Type\EmptyConfigurationFormType}

    coreshop.index.interpreter.object_id:
        class: CoreShop\Component\Index\Interpreter\ObjectIdInterpreter
        tags:
          - { name: coreshop.index.interpreter, type: objectId, form-type: CoreShop\Bundle\IndexBundle\Form\Type\EmptyConfigurationFormType}

    coreshop.index.interpreter.object_id_sum:
        class: CoreShop\Component\Index\Interpreter\ObjectIdSumInterpreter
        tags:
          - { name: coreshop.index.interpreter, type: objectIdSum, form-type: CoreShop\Bundle\IndexBundle\Form\Type\EmptyConfigurationFormType}

    coreshop.index.interpreter.object:
        class: CoreShop\Component\Index\Interpreter\ObjectInterpreter
        tags:
          - { name: coreshop.index.interpreter, type: object, form-type: CoreShop\Bundle\IndexBundle\Form\Type\EmptyConfigurationFormType}

    coreshop.index.interpreter.object_property:
        class: CoreShop\Component\Index\Interpreter\ObjectPropertyInterpreter
        tags:
          - { name: coreshop.index.interpreter, type: objectProperty, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Interpreter\ObjectPropertyInterpreterFormType}

    coreshop.index.interpreter.quantity_value:
        class: CoreShop\Component\Index\Interpreter\QuantityValueInterpreter
        tags:
          - { name: coreshop.index.interpreter, type: quantityValue, form-type: CoreShop\Bundle\IndexBundle\Form\Type\EmptyConfigurationFormType}

    coreshop.index.interpreter.locale_mapping:
        class: CoreShop\Component\Index\Interpreter\LocaleMappingInterpreter
        tags:
          - { name: coreshop.index.interpreter, type: localeMapping, form-type: CoreShop\Bundle\IndexBundle\Form\Type\EmptyConfigurationFormType}

    coreshop.index.interpreter.timestamp:
        class: CoreShop\Component\Index\Interpreter\TimestampInterpreter
        tags:
          - { name: coreshop.index.interpreter, type: timestamp, form-type: CoreShop\Bundle\IndexBundle\Form\Type\EmptyConfigurationFormType }

    coreshop.index.interpreter.expression:
        class: CoreShop\Component\Index\Interpreter\ExpressionInterpreter
        arguments:
            - '@service_container'
        tags:
          - { name: coreshop.index.interpreter, type: expression, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Interpreter\ExpressionInterpreterFormType}

    # Index Column Types
    coreshop.index.column_type.classification_store:
        class: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeClassificationStoreType
        tags:
            - { name: coreshop.index.column_type, type: classificationstore, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeClassificationStoreType}

    coreshop.index.column_type.field_collection:
        class: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeFieldCollectionType
        tags:
            - { name: coreshop.index.column_type, type: fieldcollections, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeFieldCollectionType }

    coreshop.index.column_type.localized_fields:
        class: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeLocalizedFieldsType
        tags:
            - { name: coreshop.index.column_type, type: localizedfields, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeLocalizedFieldsType }

    coreshop.index.column_type.object_brick:
        class: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeObjectBrickType
        tags:
            - { name: coreshop.index.column_type, type: objectbricks, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeObjectBrickType }

    coreshop.index.column_type.object:
        class: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeObjectType
        tags:
            - { name: coreshop.index.column_type, type: object, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeObjectType }

    coreshop.index.column_type.system:
        class: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeSystemType
        tags:
            - { name: coreshop.index.column_type, type: system, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeSystemType }

    # Filter Condition Types
    coreshop.filter.condition_type.select:
        class: CoreShop\Component\Index\Filter\SelectFilterConditionProcessor
        tags:
            - { name: coreshop.filter.condition_type, type: select, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Filter\FilterConditionSelectType}

    coreshop.filter.condition_type.range:
        class: CoreShop\Component\Index\Filter\RangeFilterConditionProcessor
        tags:
            - { name: coreshop.filter.condition_type, type: range, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Filter\FilterConditionRangeType}

    coreshop.filter.condition_type.multiselect:
        class: CoreShop\Component\Index\Filter\MultiselectFilterConditionProcessor
        tags:
            - { name: coreshop.filter.condition_type, type: multiselect, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Filter\FilterConditionMultiselectType}

    coreshop.filter.condition_type.nested:
        class: CoreShop\Component\Index\Filter\NestedFilterConditionProcessor
        arguments:
            - '@coreshop.registry.filter.condition_types'
        tags:
            - { name: coreshop.filter.condition_type, type: nested, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Filter\FilterConditionNestedType}

    # Will be deactivated for now, this is not functional as it is right now
    #coreshop.filter.condition_type.boolean:
    #  class: CoreShop\Component\Index\Filter\BooleanFilterConditionProcessor
    #  tags:
    #    - { name: coreshop.filter.condition_type, type: boolean, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Filter\FilterConditionBooleanType}

    coreshop.filter.condition_type.releational_multihref:
        class: CoreShop\Component\Index\Filter\RelationalMultiselectConditionProcessor
        tags:
            - { name: coreshop.filter.condition_type, type: relational_multiselect, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Filter\FilterConditionMultiselectType}

    # Index Updater Service
    coreshop.index.updater:
        class: CoreShop\Component\Index\Service\IndexUpdaterService
        arguments:
            - '@coreshop.repository.index'
            - '@coreshop.registry.index.worker'