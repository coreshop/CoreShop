name: Behat
on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]

jobs:
  behat:
    runs-on: ubuntu-latest
    env:
      APP_ENV: "test"
      CORESHOP_TEST: 1
      PIMCORE_TEST_DB_DSN: "mysql://root:root@127.0.0.1:3306/coreshop_test"

    strategy:
      matrix:
        php: [ 8.0 ]
        pimcore: [ 10.0.x-dev ]
        database: [ 'mysql:8.0', 'percona:8.0', 'mariadb:10.3', 'mariadb:10.4', 'mariadb:10.5' ]
        dependencies: [ highest, lowest ]

    services:
      database:
        image: "${{ matrix.database }}"
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: coreshop_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    name: "${{ matrix.pimcore }}, PHP ${{ matrix.php }}, DB ${{ matrix.database }}, Deps ${{ matrix.dependencies }}"

    steps:
    - uses: actions/checkout@v2

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        ini-values: display_errors=On, display_startup_errors=On, error_reporting=32767
        extensions: intl, gd, simpleXML, dom, exif, fileinfo, iconv, mbstring, mysqli, pdo_mysql, zip, zlib

    - name: Check PHP Version
      run: php -v

    - name: Verify MySQL connection
      run: |
        mysql --version
        sudo apt-get install -y mysql-client
        mysql --host 127.0.0.1 --port ${{ job.services.database.ports['3306'] }} -uroot -proot -e "SHOW DATABASES"

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache composer dependencies
      uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
        restore-keys: ${{ runner.os }}-composer-

    - if: matrix.dependencies == 'highest'
      name: Install dependencies highest
      run: |
        composer req pimcore/pimcore:${{ matrix.pimcore }} --no-interaction --no-scripts --no-update
        composer update --no-progress --prefer-dist --optimize-autoloader

    - if: matrix.dependencies == 'lowest'
      name: Install dependencies lowest
      run: |
        composer req pimcore/pimcore:${{ matrix.pimcore }} --no-interaction --no-scripts --no-update
        composer update --no-progress --prefer-dist --optimize-autoloader --prefer-lowest

    - name: Cache clear
      run: bin/console cache:clear

    - name: Assets Install
      run: bin/console assets:install --symlink

    - name: Run Behat
      run: vendor/bin/behat --strict --no-interaction -vvv -f progress --config behat.yml.dist -p default
